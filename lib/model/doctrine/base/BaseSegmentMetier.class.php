<?php

/**
 * BaseSegmentMetier
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $segment_id
 * @property integer $metier_id
 * @property Segment $Segment
 * @property Metier $Metier
 * 
 * @method integer       getId()         Returns the current record's "id" value
 * @method integer       getSegmentId()  Returns the current record's "segment_id" value
 * @method integer       getMetierId()   Returns the current record's "metier_id" value
 * @method Segment       getSegment()    Returns the current record's "Segment" value
 * @method Metier        getMetier()     Returns the current record's "Metier" value
 * @method SegmentMetier setId()         Sets the current record's "id" value
 * @method SegmentMetier setSegmentId()  Sets the current record's "segment_id" value
 * @method SegmentMetier setMetierId()   Sets the current record's "metier_id" value
 * @method SegmentMetier setSegment()    Sets the current record's "Segment" value
 * @method SegmentMetier setMetier()     Sets the current record's "Metier" value
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSegmentMetier extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('segment_metier');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('segment_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('metier_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Segment', array(
             'local' => 'segment_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Metier', array(
             'local' => 'metier_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}