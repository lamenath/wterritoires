<?php

/**
 * BaseFeedback
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $profil_id
 * @property enum $status
 * @property string $titre
 * @property clob $message
 * @property Profil $Profil
 * 
 * @method integer  getProfilId()  Returns the current record's "profil_id" value
 * @method enum     getStatus()    Returns the current record's "status" value
 * @method string   getTitre()     Returns the current record's "titre" value
 * @method clob     getMessage()   Returns the current record's "message" value
 * @method Profil   getProfil()    Returns the current record's "Profil" value
 * @method Feedback setProfilId()  Sets the current record's "profil_id" value
 * @method Feedback setStatus()    Sets the current record's "status" value
 * @method Feedback setTitre()     Sets the current record's "titre" value
 * @method Feedback setMessage()   Sets the current record's "message" value
 * @method Feedback setProfil()    Sets the current record's "Profil" value
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFeedback extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('feedback');
        $this->hasColumn('profil_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'new',
              1 => 'acknowledged',
              2 => 'prod',
             ),
             'default' => 'new',
             ));
        $this->hasColumn('titre', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('message', 'clob', null, array(
             'type' => 'clob',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profil', array(
             'local' => 'profil_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}