<?php

/**
 * BaseMetier
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nom
 * @property clob $description
 * @property boolean $is_activated
 * @property Doctrine_Collection $Profil
 * @property Doctrine_Collection $ProfilMetier
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $EventMetier
 * @property Doctrine_Collection $Structure
 * @property Doctrine_Collection $StructureMetier
 * @property Doctrine_Collection $Projet
 * @property Doctrine_Collection $ProjetMetier
 * 
 * @method string              getNom()             Returns the current record's "nom" value
 * @method clob                getDescription()     Returns the current record's "description" value
 * @method boolean             getIsActivated()     Returns the current record's "is_activated" value
 * @method Doctrine_Collection getProfil()          Returns the current record's "Profil" collection
 * @method Doctrine_Collection getProfilMetier()    Returns the current record's "ProfilMetier" collection
 * @method Doctrine_Collection getEvent()           Returns the current record's "Event" collection
 * @method Doctrine_Collection getEventMetier()     Returns the current record's "EventMetier" collection
 * @method Doctrine_Collection getStructure()       Returns the current record's "Structure" collection
 * @method Doctrine_Collection getStructureMetier() Returns the current record's "StructureMetier" collection
 * @method Doctrine_Collection getProjet()          Returns the current record's "Projet" collection
 * @method Doctrine_Collection getProjetMetier()    Returns the current record's "ProjetMetier" collection
 * @method Metier              setNom()             Sets the current record's "nom" value
 * @method Metier              setDescription()     Sets the current record's "description" value
 * @method Metier              setIsActivated()     Sets the current record's "is_activated" value
 * @method Metier              setProfil()          Sets the current record's "Profil" collection
 * @method Metier              setProfilMetier()    Sets the current record's "ProfilMetier" collection
 * @method Metier              setEvent()           Sets the current record's "Event" collection
 * @method Metier              setEventMetier()     Sets the current record's "EventMetier" collection
 * @method Metier              setStructure()       Sets the current record's "Structure" collection
 * @method Metier              setStructureMetier() Sets the current record's "StructureMetier" collection
 * @method Metier              setProjet()          Sets the current record's "Projet" collection
 * @method Metier              setProjetMetier()    Sets the current record's "ProjetMetier" collection
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMetier extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('metier');
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('is_activated', array(
             'fields' => 
             array(
              0 => 'is_activated',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Profil', array(
             'refClass' => 'ProfilMetier',
             'local' => 'metier_id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProfilMetier', array(
             'local' => 'id',
             'foreign' => 'metier_id'));

        $this->hasMany('Event', array(
             'refClass' => 'EventMetier',
             'local' => 'metier_id',
             'foreign' => 'event_id'));

        $this->hasMany('EventMetier', array(
             'local' => 'id',
             'foreign' => 'metier_id'));

        $this->hasMany('Structure', array(
             'refClass' => 'StructureMetier',
             'local' => 'metier_id',
             'foreign' => 'structure_id'));

        $this->hasMany('StructureMetier', array(
             'local' => 'id',
             'foreign' => 'metier_id'));

        $this->hasMany('Projet', array(
             'refClass' => 'ProjetMetier',
             'local' => 'metier_id',
             'foreign' => 'projet_id'));

        $this->hasMany('ProjetMetier', array(
             'local' => 'id',
             'foreign' => 'metier_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'nom',
             ),
             ));
        $taggable0 = new Taggable(array(
             'templates' => 
             array(
              0 => 'Taggable',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
        $this->actAs($taggable0);
    }
}