<?php

/**
 * BaseProjetTheme
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $projet_id
 * @property integer $theme_id
 * @property Projet $Projet
 * @property Theme $Theme
 * 
 * @method integer     getId()        Returns the current record's "id" value
 * @method integer     getProjetId()  Returns the current record's "projet_id" value
 * @method integer     getThemeId()   Returns the current record's "theme_id" value
 * @method Projet      getProjet()    Returns the current record's "Projet" value
 * @method Theme       getTheme()     Returns the current record's "Theme" value
 * @method ProjetTheme setId()        Sets the current record's "id" value
 * @method ProjetTheme setProjetId()  Sets the current record's "projet_id" value
 * @method ProjetTheme setThemeId()   Sets the current record's "theme_id" value
 * @method ProjetTheme setProjet()    Sets the current record's "Projet" value
 * @method ProjetTheme setTheme()     Sets the current record's "Theme" value
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjetTheme extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('projet_theme');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('projet_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('theme_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Projet', array(
             'local' => 'projet_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Theme', array(
             'local' => 'theme_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}