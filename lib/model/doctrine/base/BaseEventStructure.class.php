<?php

/**
 * BaseEventStructure
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $event_id
 * @property integer $structure_id
 * @property enum $type
 * @property Event $Event
 * @property Structure $Structure
 * 
 * @method integer        getId()           Returns the current record's "id" value
 * @method integer        getEventId()      Returns the current record's "event_id" value
 * @method integer        getStructureId()  Returns the current record's "structure_id" value
 * @method enum           getType()         Returns the current record's "type" value
 * @method Event          getEvent()        Returns the current record's "Event" value
 * @method Structure      getStructure()    Returns the current record's "Structure" value
 * @method EventStructure setId()           Sets the current record's "id" value
 * @method EventStructure setEventId()      Sets the current record's "event_id" value
 * @method EventStructure setStructureId()  Sets the current record's "structure_id" value
 * @method EventStructure setType()         Sets the current record's "type" value
 * @method EventStructure setEvent()        Sets the current record's "Event" value
 * @method EventStructure setStructure()    Sets the current record's "Structure" value
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEventStructure extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event_structure');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('structure_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'referent',
              1 => 'partenaire',
             ),
             ));


        $this->index('type', array(
             'fields' => 
             array(
              0 => 'type',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Structure', array(
             'local' => 'structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}