<?php

/**
 * BaseProjetIdee
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $profil_id
 * @property integer $projet_id
 * @property integer $event_id
 * @property integer $story_id
 * @property enum $status
 * @property string $titre
 * @property clob $message
 * @property Profil $Profil
 * @property Projet $Projet
 * @property Event $Event
 * @property Story $Story
 * 
 * @method integer    getProfilId()  Returns the current record's "profil_id" value
 * @method integer    getProjetId()  Returns the current record's "projet_id" value
 * @method integer    getEventId()   Returns the current record's "event_id" value
 * @method integer    getStoryId()   Returns the current record's "story_id" value
 * @method enum       getStatus()    Returns the current record's "status" value
 * @method string     getTitre()     Returns the current record's "titre" value
 * @method clob       getMessage()   Returns the current record's "message" value
 * @method Profil     getProfil()    Returns the current record's "Profil" value
 * @method Projet     getProjet()    Returns the current record's "Projet" value
 * @method Event      getEvent()     Returns the current record's "Event" value
 * @method Story      getStory()     Returns the current record's "Story" value
 * @method ProjetIdee setProfilId()  Sets the current record's "profil_id" value
 * @method ProjetIdee setProjetId()  Sets the current record's "projet_id" value
 * @method ProjetIdee setEventId()   Sets the current record's "event_id" value
 * @method ProjetIdee setStoryId()   Sets the current record's "story_id" value
 * @method ProjetIdee setStatus()    Sets the current record's "status" value
 * @method ProjetIdee setTitre()     Sets the current record's "titre" value
 * @method ProjetIdee setMessage()   Sets the current record's "message" value
 * @method ProjetIdee setProfil()    Sets the current record's "Profil" value
 * @method ProjetIdee setProjet()    Sets the current record's "Projet" value
 * @method ProjetIdee setEvent()     Sets the current record's "Event" value
 * @method ProjetIdee setStory()     Sets the current record's "Story" value
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjetIdee extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('projet_idee');
        $this->hasColumn('profil_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('projet_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('story_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'new',
              1 => 'acknowledged',
              2 => 'prod',
             ),
             'default' => 'new',
             ));
        $this->hasColumn('titre', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('message', 'clob', null, array(
             'type' => 'clob',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profil', array(
             'local' => 'profil_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Projet', array(
             'local' => 'projet_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Story', array(
             'local' => 'story_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}