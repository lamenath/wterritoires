<?php

/**
 * BaseStoryPictures
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $story_id
 * @property integer $photo_id
 * @property Story $Story
 * @property PhotoProjet $PhotoProjet
 * 
 * @method integer       getStoryId()     Returns the current record's "story_id" value
 * @method integer       getPhotoId()     Returns the current record's "photo_id" value
 * @method Story         getStory()       Returns the current record's "Story" value
 * @method PhotoProjet   getPhotoProjet() Returns the current record's "PhotoProjet" value
 * @method StoryPictures setStoryId()     Sets the current record's "story_id" value
 * @method StoryPictures setPhotoId()     Sets the current record's "photo_id" value
 * @method StoryPictures setStory()       Sets the current record's "Story" value
 * @method StoryPictures setPhotoProjet() Sets the current record's "PhotoProjet" value
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStoryPictures extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('story_pictures');
        $this->hasColumn('story_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('photo_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Story', array(
             'local' => 'story_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('PhotoProjet', array(
             'local' => 'photo_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}