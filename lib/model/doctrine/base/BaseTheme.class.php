<?php

/**
 * BaseTheme
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nom
 * @property clob $description
 * @property boolean $is_activated
 * @property Doctrine_Collection $Profil
 * @property Doctrine_Collection $ProfilTheme
 * @property Doctrine_Collection $Ressource
 * @property Doctrine_Collection $RessourceTheme
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $EventTheme
 * @property Doctrine_Collection $Structure
 * @property Doctrine_Collection $StructureTheme
 * @property Doctrine_Collection $Projet
 * @property Doctrine_Collection $ProjetTheme
 * 
 * @method string              getNom()            Returns the current record's "nom" value
 * @method clob                getDescription()    Returns the current record's "description" value
 * @method boolean             getIsActivated()    Returns the current record's "is_activated" value
 * @method Doctrine_Collection getProfil()         Returns the current record's "Profil" collection
 * @method Doctrine_Collection getProfilTheme()    Returns the current record's "ProfilTheme" collection
 * @method Doctrine_Collection getRessource()      Returns the current record's "Ressource" collection
 * @method Doctrine_Collection getRessourceTheme() Returns the current record's "RessourceTheme" collection
 * @method Doctrine_Collection getEvent()          Returns the current record's "Event" collection
 * @method Doctrine_Collection getEventTheme()     Returns the current record's "EventTheme" collection
 * @method Doctrine_Collection getStructure()      Returns the current record's "Structure" collection
 * @method Doctrine_Collection getStructureTheme() Returns the current record's "StructureTheme" collection
 * @method Doctrine_Collection getProjet()         Returns the current record's "Projet" collection
 * @method Doctrine_Collection getProjetTheme()    Returns the current record's "ProjetTheme" collection
 * @method Theme               setNom()            Sets the current record's "nom" value
 * @method Theme               setDescription()    Sets the current record's "description" value
 * @method Theme               setIsActivated()    Sets the current record's "is_activated" value
 * @method Theme               setProfil()         Sets the current record's "Profil" collection
 * @method Theme               setProfilTheme()    Sets the current record's "ProfilTheme" collection
 * @method Theme               setRessource()      Sets the current record's "Ressource" collection
 * @method Theme               setRessourceTheme() Sets the current record's "RessourceTheme" collection
 * @method Theme               setEvent()          Sets the current record's "Event" collection
 * @method Theme               setEventTheme()     Sets the current record's "EventTheme" collection
 * @method Theme               setStructure()      Sets the current record's "Structure" collection
 * @method Theme               setStructureTheme() Sets the current record's "StructureTheme" collection
 * @method Theme               setProjet()         Sets the current record's "Projet" collection
 * @method Theme               setProjetTheme()    Sets the current record's "ProjetTheme" collection
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTheme extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('theme');
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));


        $this->index('is_activated', array(
             'fields' => 
             array(
              0 => 'is_activated',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Profil', array(
             'refClass' => 'ProfilTheme',
             'local' => 'theme_id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProfilTheme', array(
             'local' => 'id',
             'foreign' => 'theme_id'));

        $this->hasMany('Ressource', array(
             'refClass' => 'RessourceTheme',
             'local' => 'theme_id',
             'foreign' => 'ressource_id'));

        $this->hasMany('RessourceTheme', array(
             'local' => 'id',
             'foreign' => 'theme_id'));

        $this->hasMany('Event', array(
             'refClass' => 'EventTheme',
             'local' => 'theme_id',
             'foreign' => 'event_id'));

        $this->hasMany('EventTheme', array(
             'local' => 'id',
             'foreign' => 'theme_id'));

        $this->hasMany('Structure', array(
             'refClass' => 'StructureTheme',
             'local' => 'theme_id',
             'foreign' => 'structure_id'));

        $this->hasMany('StructureTheme', array(
             'local' => 'id',
             'foreign' => 'theme_id'));

        $this->hasMany('Projet', array(
             'refClass' => 'ProjetTheme',
             'local' => 'theme_id',
             'foreign' => 'projet_id'));

        $this->hasMany('ProjetTheme', array(
             'local' => 'id',
             'foreign' => 'theme_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'nom',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}