<?php

/**
 * BaseProfil
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $nom
 * @property string $prenom
 * @property string $adresse
 * @property string $ville
 * @property string $code_postal
 * @property string $email
 * @property clob $presentation
 * @property string $login
 * @property string $password
 * @property string $photo
 * @property string $photo_crop
 * @property enum $privacy_type
 * @property boolean $notify_comment
 * @property boolean $notify_new_item
 * @property integer $relance_count
 * @property boolean $is_activated
 * @property boolean $is_public
 * @property boolean $is_admin
 * @property timestamp $last_login
 * @property Doctrine_Collection $Metier
 * @property Doctrine_Collection $Projet
 * @property Doctrine_Collection $Theme
 * @property Doctrine_Collection $Competence
 * @property Doctrine_Collection $CompetenceRecherche
 * @property Doctrine_Collection $Filiere
 * @property Doctrine_Collection $Expertise
 * @property Doctrine_Collection $Structure
 * @property Doctrine_Collection $ActionPassword
 * @property Doctrine_Collection $Historique
 * @property Doctrine_Collection $Consultation
 * @property Doctrine_Collection $WishInvitation
 * @property Doctrine_Collection $Invitation
 * @property Doctrine_Collection $InvitationEmail
 * @property Doctrine_Collection $ProfilProfil
 * @property Doctrine_Collection $ProfilMetier
 * @property Doctrine_Collection $ProfilProjet
 * @property Doctrine_Collection $ProfilStructure
 * @property Doctrine_Collection $ProfilTheme
 * @property Doctrine_Collection $ProfilFiliere
 * @property Doctrine_Collection $ProfilCompetence
 * @property Doctrine_Collection $ProfilCompetenceRecherche
 * @property Doctrine_Collection $ProfilExpertise
 * @property Doctrine_Collection $PhotoProjet
 * @property Doctrine_Collection $Story
 * @property Doctrine_Collection $StoryBuddies
 * @property Doctrine_Collection $Ressource
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $EventAdmin
 * @property Doctrine_Collection $EventInvite
 * @property Doctrine_Collection $StructureContact
 * @property Doctrine_Collection $Feedback
 * @property Doctrine_Collection $ProjetIdee
 * @property Doctrine_Collection $Commentaire
 * @property Doctrine_Collection $CommentaireVote
 * @property Doctrine_Collection $Messagerie
 * 
 * @method string              getNom()                       Returns the current record's "nom" value
 * @method string              getPrenom()                    Returns the current record's "prenom" value
 * @method string              getAdresse()                   Returns the current record's "adresse" value
 * @method string              getVille()                     Returns the current record's "ville" value
 * @method string              getCodePostal()                Returns the current record's "code_postal" value
 * @method string              getEmail()                     Returns the current record's "email" value
 * @method clob                getPresentation()              Returns the current record's "presentation" value
 * @method string              getLogin()                     Returns the current record's "login" value
 * @method string              getPassword()                  Returns the current record's "password" value
 * @method string              getPhoto()                     Returns the current record's "photo" value
 * @method string              getPhotoCrop()                 Returns the current record's "photo_crop" value
 * @method enum                getPrivacyType()               Returns the current record's "privacy_type" value
 * @method boolean             getNotifyComment()             Returns the current record's "notify_comment" value
 * @method boolean             getNotifyNewItem()             Returns the current record's "notify_new_item" value
 * @method integer             getRelanceCount()              Returns the current record's "relance_count" value
 * @method boolean             getIsActivated()               Returns the current record's "is_activated" value
 * @method boolean             getIsPublic()                  Returns the current record's "is_public" value
 * @method boolean             getIsAdmin()                   Returns the current record's "is_admin" value
 * @method timestamp           getLastLogin()                 Returns the current record's "last_login" value
 * @method Doctrine_Collection getMetier()                    Returns the current record's "Metier" collection
 * @method Doctrine_Collection getProjet()                    Returns the current record's "Projet" collection
 * @method Doctrine_Collection getTheme()                     Returns the current record's "Theme" collection
 * @method Doctrine_Collection getCompetence()                Returns the current record's "Competence" collection
 * @method Doctrine_Collection getCompetenceRecherche()       Returns the current record's "CompetenceRecherche" collection
 * @method Doctrine_Collection getFiliere()                   Returns the current record's "Filiere" collection
 * @method Doctrine_Collection getExpertise()                 Returns the current record's "Expertise" collection
 * @method Doctrine_Collection getStructure()                 Returns the current record's "Structure" collection
 * @method Doctrine_Collection getActionPassword()            Returns the current record's "ActionPassword" collection
 * @method Doctrine_Collection getHistorique()                Returns the current record's "Historique" collection
 * @method Doctrine_Collection getConsultation()              Returns the current record's "Consultation" collection
 * @method Doctrine_Collection getWishInvitation()            Returns the current record's "WishInvitation" collection
 * @method Doctrine_Collection getInvitation()                Returns the current record's "Invitation" collection
 * @method Doctrine_Collection getInvitationEmail()           Returns the current record's "InvitationEmail" collection
 * @method Doctrine_Collection getProfilProfil()              Returns the current record's "ProfilProfil" collection
 * @method Doctrine_Collection getProfilMetier()              Returns the current record's "ProfilMetier" collection
 * @method Doctrine_Collection getProfilProjet()              Returns the current record's "ProfilProjet" collection
 * @method Doctrine_Collection getProfilStructure()           Returns the current record's "ProfilStructure" collection
 * @method Doctrine_Collection getProfilTheme()               Returns the current record's "ProfilTheme" collection
 * @method Doctrine_Collection getProfilFiliere()             Returns the current record's "ProfilFiliere" collection
 * @method Doctrine_Collection getProfilCompetence()          Returns the current record's "ProfilCompetence" collection
 * @method Doctrine_Collection getProfilCompetenceRecherche() Returns the current record's "ProfilCompetenceRecherche" collection
 * @method Doctrine_Collection getProfilExpertise()           Returns the current record's "ProfilExpertise" collection
 * @method Doctrine_Collection getPhotoProjet()               Returns the current record's "PhotoProjet" collection
 * @method Doctrine_Collection getStory()                     Returns the current record's "Story" collection
 * @method Doctrine_Collection getStoryBuddies()              Returns the current record's "StoryBuddies" collection
 * @method Doctrine_Collection getRessource()                 Returns the current record's "Ressource" collection
 * @method Doctrine_Collection getEvent()                     Returns the current record's "Event" collection
 * @method Doctrine_Collection getEventAdmin()                Returns the current record's "EventAdmin" collection
 * @method Doctrine_Collection getEventInvite()               Returns the current record's "EventInvite" collection
 * @method Doctrine_Collection getStructureContact()          Returns the current record's "StructureContact" collection
 * @method Doctrine_Collection getFeedback()                  Returns the current record's "Feedback" collection
 * @method Doctrine_Collection getProjetIdee()                Returns the current record's "ProjetIdee" collection
 * @method Doctrine_Collection getCommentaire()               Returns the current record's "Commentaire" collection
 * @method Doctrine_Collection getCommentaireVote()           Returns the current record's "CommentaireVote" collection
 * @method Doctrine_Collection getMessagerie()                Returns the current record's "Messagerie" collection
 * @method Profil              setNom()                       Sets the current record's "nom" value
 * @method Profil              setPrenom()                    Sets the current record's "prenom" value
 * @method Profil              setAdresse()                   Sets the current record's "adresse" value
 * @method Profil              setVille()                     Sets the current record's "ville" value
 * @method Profil              setCodePostal()                Sets the current record's "code_postal" value
 * @method Profil              setEmail()                     Sets the current record's "email" value
 * @method Profil              setPresentation()              Sets the current record's "presentation" value
 * @method Profil              setLogin()                     Sets the current record's "login" value
 * @method Profil              setPassword()                  Sets the current record's "password" value
 * @method Profil              setPhoto()                     Sets the current record's "photo" value
 * @method Profil              setPhotoCrop()                 Sets the current record's "photo_crop" value
 * @method Profil              setPrivacyType()               Sets the current record's "privacy_type" value
 * @method Profil              setNotifyComment()             Sets the current record's "notify_comment" value
 * @method Profil              setNotifyNewItem()             Sets the current record's "notify_new_item" value
 * @method Profil              setRelanceCount()              Sets the current record's "relance_count" value
 * @method Profil              setIsActivated()               Sets the current record's "is_activated" value
 * @method Profil              setIsPublic()                  Sets the current record's "is_public" value
 * @method Profil              setIsAdmin()                   Sets the current record's "is_admin" value
 * @method Profil              setLastLogin()                 Sets the current record's "last_login" value
 * @method Profil              setMetier()                    Sets the current record's "Metier" collection
 * @method Profil              setProjet()                    Sets the current record's "Projet" collection
 * @method Profil              setTheme()                     Sets the current record's "Theme" collection
 * @method Profil              setCompetence()                Sets the current record's "Competence" collection
 * @method Profil              setCompetenceRecherche()       Sets the current record's "CompetenceRecherche" collection
 * @method Profil              setFiliere()                   Sets the current record's "Filiere" collection
 * @method Profil              setExpertise()                 Sets the current record's "Expertise" collection
 * @method Profil              setStructure()                 Sets the current record's "Structure" collection
 * @method Profil              setActionPassword()            Sets the current record's "ActionPassword" collection
 * @method Profil              setHistorique()                Sets the current record's "Historique" collection
 * @method Profil              setConsultation()              Sets the current record's "Consultation" collection
 * @method Profil              setWishInvitation()            Sets the current record's "WishInvitation" collection
 * @method Profil              setInvitation()                Sets the current record's "Invitation" collection
 * @method Profil              setInvitationEmail()           Sets the current record's "InvitationEmail" collection
 * @method Profil              setProfilProfil()              Sets the current record's "ProfilProfil" collection
 * @method Profil              setProfilMetier()              Sets the current record's "ProfilMetier" collection
 * @method Profil              setProfilProjet()              Sets the current record's "ProfilProjet" collection
 * @method Profil              setProfilStructure()           Sets the current record's "ProfilStructure" collection
 * @method Profil              setProfilTheme()               Sets the current record's "ProfilTheme" collection
 * @method Profil              setProfilFiliere()             Sets the current record's "ProfilFiliere" collection
 * @method Profil              setProfilCompetence()          Sets the current record's "ProfilCompetence" collection
 * @method Profil              setProfilCompetenceRecherche() Sets the current record's "ProfilCompetenceRecherche" collection
 * @method Profil              setProfilExpertise()           Sets the current record's "ProfilExpertise" collection
 * @method Profil              setPhotoProjet()               Sets the current record's "PhotoProjet" collection
 * @method Profil              setStory()                     Sets the current record's "Story" collection
 * @method Profil              setStoryBuddies()              Sets the current record's "StoryBuddies" collection
 * @method Profil              setRessource()                 Sets the current record's "Ressource" collection
 * @method Profil              setEvent()                     Sets the current record's "Event" collection
 * @method Profil              setEventAdmin()                Sets the current record's "EventAdmin" collection
 * @method Profil              setEventInvite()               Sets the current record's "EventInvite" collection
 * @method Profil              setStructureContact()          Sets the current record's "StructureContact" collection
 * @method Profil              setFeedback()                  Sets the current record's "Feedback" collection
 * @method Profil              setProjetIdee()                Sets the current record's "ProjetIdee" collection
 * @method Profil              setCommentaire()               Sets the current record's "Commentaire" collection
 * @method Profil              setCommentaireVote()           Sets the current record's "CommentaireVote" collection
 * @method Profil              setMessagerie()                Sets the current record's "Messagerie" collection
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProfil extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('profil');
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('prenom', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('adresse', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('ville', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('code_postal', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('presentation', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('login', 'string', 25, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 25,
             ));
        $this->hasColumn('password', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 100,
             ));
        $this->hasColumn('photo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('photo_crop', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('privacy_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'private',
              1 => 'public',
              2 => 'friends',
             ),
             'default' => 'public',
             ));
        $this->hasColumn('notify_comment', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('notify_new_item', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 1,
             ));
        $this->hasColumn('relance_count', 'integer', 11, array(
             'type' => 'integer',
             'default' => 0,
             'length' => 11,
             ));
        $this->hasColumn('is_activated', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('is_admin', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => 0,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));


        $this->index('created_at', array(
             'fields' => 
             array(
              0 => 'created_at',
             ),
             ));
        $this->index('updated_at', array(
             'fields' => 
             array(
              0 => 'updated_at',
             ),
             ));
        $this->index('is_public', array(
             'fields' => 
             array(
              0 => 'is_public',
             ),
             ));
        $this->index('latitude', array(
             'fields' => 
             array(
              0 => 'latitude',
             ),
             ));
        $this->index('longitude', array(
             'fields' => 
             array(
              0 => 'longitude',
             ),
             ));
        $this->index('prenom', array(
             'fields' => 
             array(
              0 => 'prenom',
             ),
             ));
        $this->index('nom', array(
             'fields' => 
             array(
              0 => 'nom',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Metier', array(
             'refClass' => 'ProfilMetier',
             'local' => 'profil_id',
             'foreign' => 'metier_id'));

        $this->hasMany('Projet', array(
             'refClass' => 'ProfilProjet',
             'local' => 'profil_id',
             'foreign' => 'projet_id'));

        $this->hasMany('Theme', array(
             'refClass' => 'ProfilTheme',
             'local' => 'profil_id',
             'foreign' => 'theme_id'));

        $this->hasMany('Competence', array(
             'refClass' => 'ProfilCompetence',
             'local' => 'profil_id',
             'foreign' => 'competence_id'));

        $this->hasMany('Competence as CompetenceRecherche', array(
             'refClass' => 'ProfilCompetenceRecherche',
             'local' => 'profil_id',
             'foreign' => 'competence_id'));

        $this->hasMany('Filiere', array(
             'refClass' => 'ProfilFiliere',
             'local' => 'profil_id',
             'foreign' => 'filiere_id'));

        $this->hasMany('Expertise', array(
             'refClass' => 'ProfilExpertise',
             'local' => 'profil_id',
             'foreign' => 'expertise_id'));

        $this->hasMany('Structure', array(
             'refClass' => 'ProfilStructure',
             'local' => 'profil_id',
             'foreign' => 'structure_id'));

        $this->hasMany('ActionPassword', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('Historique', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('Consultation', array(
             'local' => 'id',
             'foreign' => 'visiteur_id'));

        $this->hasMany('WishInvitation', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('Invitation', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('InvitationEmail', array(
             'local' => 'id',
             'foreign' => 'inviteur_id'));

        $this->hasMany('ProfilProfil', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProfilMetier', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProfilProjet', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProfilStructure', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProfilTheme', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProfilFiliere', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProfilCompetence', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProfilCompetenceRecherche', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProfilExpertise', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('PhotoProjet', array(
             'local' => 'id',
             'foreign' => 'createur_id'));

        $this->hasMany('Story', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('StoryBuddies', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('Ressource', array(
             'local' => 'id',
             'foreign' => 'createur_id'));

        $this->hasMany('Event', array(
             'refClass' => 'EventInvite',
             'local' => 'profil_id',
             'foreign' => 'event_id'));

        $this->hasMany('EventAdmin', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('EventInvite', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('StructureContact', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('Feedback', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('ProjetIdee', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('Commentaire', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('CommentaireVote', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $this->hasMany('Messagerie', array(
             'local' => 'id',
             'foreign' => 'profil_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'login',
             ),
             'uniqueBy' => 
             array(
              0 => 'login',
              1 => 'email',
             ),
             ));
        $geolocatable0 = new Doctrine_Template_Geolocatable(array(
             'fields' => 
             array(
              0 => 'ville',
              1 => 'code_postal',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggable0);
        $this->actAs($geolocatable0);
        $this->actAs($timestampable0);
    }
}