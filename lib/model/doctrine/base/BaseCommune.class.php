<?php

/**
 * BaseCommune
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $pays_id
 * @property string $nom
 * @property clob $description
 * @property string $photo
 * @property string $code_postal
 * @property string $code_insee
 * @property Pays $Pays
 * @property Doctrine_Collection $Projet
 * 
 * @method integer             getPaysId()      Returns the current record's "pays_id" value
 * @method string              getNom()         Returns the current record's "nom" value
 * @method clob                getDescription() Returns the current record's "description" value
 * @method string              getPhoto()       Returns the current record's "photo" value
 * @method string              getCodePostal()  Returns the current record's "code_postal" value
 * @method string              getCodeInsee()   Returns the current record's "code_insee" value
 * @method Pays                getPays()        Returns the current record's "Pays" value
 * @method Doctrine_Collection getProjet()      Returns the current record's "Projet" collection
 * @method Commune             setPaysId()      Sets the current record's "pays_id" value
 * @method Commune             setNom()         Sets the current record's "nom" value
 * @method Commune             setDescription() Sets the current record's "description" value
 * @method Commune             setPhoto()       Sets the current record's "photo" value
 * @method Commune             setCodePostal()  Sets the current record's "code_postal" value
 * @method Commune             setCodeInsee()   Sets the current record's "code_insee" value
 * @method Commune             setPays()        Sets the current record's "Pays" value
 * @method Commune             setProjet()      Sets the current record's "Projet" collection
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCommune extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('commune');
        $this->hasColumn('pays_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('photo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('code_postal', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 10,
             ));
        $this->hasColumn('code_insee', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             ));


        $this->index('latitude', array(
             'fields' => 
             array(
              0 => 'latitude',
             ),
             ));
        $this->index('longitude', array(
             'fields' => 
             array(
              0 => 'longitude',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Pays', array(
             'local' => 'pays_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Projet', array(
             'local' => 'id',
             'foreign' => 'commune_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'nom',
             ),
             ));
        $geolocatable0 = new Doctrine_Template_Geolocatable(array(
             'fields' => 
             array(
              0 => 'code_postal',
              1 => 'nom',
             ),
             ));
        $this->actAs($sluggable0);
        $this->actAs($geolocatable0);
    }
}