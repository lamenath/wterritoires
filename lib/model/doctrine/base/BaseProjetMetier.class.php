<?php

/**
 * BaseProjetMetier
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $projet_id
 * @property integer $metier_id
 * @property Projet $Projet
 * @property Metier $Metier
 * 
 * @method integer      getId()        Returns the current record's "id" value
 * @method integer      getProjetId()  Returns the current record's "projet_id" value
 * @method integer      getMetierId()  Returns the current record's "metier_id" value
 * @method Projet       getProjet()    Returns the current record's "Projet" value
 * @method Metier       getMetier()    Returns the current record's "Metier" value
 * @method ProjetMetier setId()        Sets the current record's "id" value
 * @method ProjetMetier setProjetId()  Sets the current record's "projet_id" value
 * @method ProjetMetier setMetierId()  Sets the current record's "metier_id" value
 * @method ProjetMetier setProjet()    Sets the current record's "Projet" value
 * @method ProjetMetier setMetier()    Sets the current record's "Metier" value
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjetMetier extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('projet_metier');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('projet_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('metier_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Projet', array(
             'local' => 'projet_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Metier', array(
             'local' => 'metier_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}