<?php

/**
 * BasePhotoProjet
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $createur_id
 * @property integer $projet_id
 * @property integer $event_id
 * @property string $nom
 * @property string $fichier
 * @property timestamp $date
 * @property Profil $Profil
 * @property Projet $Projet
 * @property Event $Event
 * @property Doctrine_Collection $StoryPictures
 * 
 * @method integer             getCreateurId()    Returns the current record's "createur_id" value
 * @method integer             getProjetId()      Returns the current record's "projet_id" value
 * @method integer             getEventId()       Returns the current record's "event_id" value
 * @method string              getNom()           Returns the current record's "nom" value
 * @method string              getFichier()       Returns the current record's "fichier" value
 * @method timestamp           getDate()          Returns the current record's "date" value
 * @method Profil              getProfil()        Returns the current record's "Profil" value
 * @method Projet              getProjet()        Returns the current record's "Projet" value
 * @method Event               getEvent()         Returns the current record's "Event" value
 * @method Doctrine_Collection getStoryPictures() Returns the current record's "StoryPictures" collection
 * @method PhotoProjet         setCreateurId()    Sets the current record's "createur_id" value
 * @method PhotoProjet         setProjetId()      Sets the current record's "projet_id" value
 * @method PhotoProjet         setEventId()       Sets the current record's "event_id" value
 * @method PhotoProjet         setNom()           Sets the current record's "nom" value
 * @method PhotoProjet         setFichier()       Sets the current record's "fichier" value
 * @method PhotoProjet         setDate()          Sets the current record's "date" value
 * @method PhotoProjet         setProfil()        Sets the current record's "Profil" value
 * @method PhotoProjet         setProjet()        Sets the current record's "Projet" value
 * @method PhotoProjet         setEvent()         Sets the current record's "Event" value
 * @method PhotoProjet         setStoryPictures() Sets the current record's "StoryPictures" collection
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePhotoProjet extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('photo_projet');
        $this->hasColumn('createur_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('projet_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('event_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('fichier', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));


        $this->index('date', array(
             'fields' => 
             array(
              0 => 'date',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profil', array(
             'local' => 'createur_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Projet', array(
             'local' => 'projet_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Event', array(
             'local' => 'event_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('StoryPictures', array(
             'local' => 'id',
             'foreign' => 'photo_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'nom',
             ),
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}