<?php

/**
 * BaseAnnonce
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $createur_id
 * @property integer $story_id
 * @property integer $projet_id
 * @property integer $categorie_id
 * @property integer $structure_id
 * @property enum $type
 * @property string $titre
 * @property clob $description
 * @property string $ville
 * @property string $photo
 * @property Story $Story
 * @property Profil $Profil
 * @property Projet $Projet
 * @property Structure $Structure
 * @property AnnonceCategorie $AnnonceCategorie
 * @property Doctrine_Collection $Filiere
 * @property Doctrine_Collection $Theme
 * @property Doctrine_Collection $Competence
 * @property Doctrine_Collection $Metier
 * @property Doctrine_Collection $AnnonceFiliere
 * @property Doctrine_Collection $AnnonceTheme
 * @property Doctrine_Collection $AnnonceCompetence
 * @property Doctrine_Collection $AnnonceMetier
 * 
 * @method integer             getCreateurId()        Returns the current record's "createur_id" value
 * @method integer             getStoryId()           Returns the current record's "story_id" value
 * @method integer             getProjetId()          Returns the current record's "projet_id" value
 * @method integer             getCategorieId()       Returns the current record's "categorie_id" value
 * @method integer             getStructureId()       Returns the current record's "structure_id" value
 * @method enum                getType()              Returns the current record's "type" value
 * @method string              getTitre()             Returns the current record's "titre" value
 * @method clob                getDescription()       Returns the current record's "description" value
 * @method string              getVille()             Returns the current record's "ville" value
 * @method string              getPhoto()             Returns the current record's "photo" value
 * @method Story               getStory()             Returns the current record's "Story" value
 * @method Profil              getProfil()            Returns the current record's "Profil" value
 * @method Projet              getProjet()            Returns the current record's "Projet" value
 * @method Structure           getStructure()         Returns the current record's "Structure" value
 * @method AnnonceCategorie    getAnnonceCategorie()  Returns the current record's "AnnonceCategorie" value
 * @method Doctrine_Collection getFiliere()           Returns the current record's "Filiere" collection
 * @method Doctrine_Collection getTheme()             Returns the current record's "Theme" collection
 * @method Doctrine_Collection getCompetence()        Returns the current record's "Competence" collection
 * @method Doctrine_Collection getMetier()            Returns the current record's "Metier" collection
 * @method Doctrine_Collection getAnnonceFiliere()    Returns the current record's "AnnonceFiliere" collection
 * @method Doctrine_Collection getAnnonceTheme()      Returns the current record's "AnnonceTheme" collection
 * @method Doctrine_Collection getAnnonceCompetence() Returns the current record's "AnnonceCompetence" collection
 * @method Doctrine_Collection getAnnonceMetier()     Returns the current record's "AnnonceMetier" collection
 * @method Annonce             setCreateurId()        Sets the current record's "createur_id" value
 * @method Annonce             setStoryId()           Sets the current record's "story_id" value
 * @method Annonce             setProjetId()          Sets the current record's "projet_id" value
 * @method Annonce             setCategorieId()       Sets the current record's "categorie_id" value
 * @method Annonce             setStructureId()       Sets the current record's "structure_id" value
 * @method Annonce             setType()              Sets the current record's "type" value
 * @method Annonce             setTitre()             Sets the current record's "titre" value
 * @method Annonce             setDescription()       Sets the current record's "description" value
 * @method Annonce             setVille()             Sets the current record's "ville" value
 * @method Annonce             setPhoto()             Sets the current record's "photo" value
 * @method Annonce             setStory()             Sets the current record's "Story" value
 * @method Annonce             setProfil()            Sets the current record's "Profil" value
 * @method Annonce             setProjet()            Sets the current record's "Projet" value
 * @method Annonce             setStructure()         Sets the current record's "Structure" value
 * @method Annonce             setAnnonceCategorie()  Sets the current record's "AnnonceCategorie" value
 * @method Annonce             setFiliere()           Sets the current record's "Filiere" collection
 * @method Annonce             setTheme()             Sets the current record's "Theme" collection
 * @method Annonce             setCompetence()        Sets the current record's "Competence" collection
 * @method Annonce             setMetier()            Sets the current record's "Metier" collection
 * @method Annonce             setAnnonceFiliere()    Sets the current record's "AnnonceFiliere" collection
 * @method Annonce             setAnnonceTheme()      Sets the current record's "AnnonceTheme" collection
 * @method Annonce             setAnnonceCompetence() Sets the current record's "AnnonceCompetence" collection
 * @method Annonce             setAnnonceMetier()     Sets the current record's "AnnonceMetier" collection
 * 
 * @package    rrr
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAnnonce extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('annonce');
        $this->hasColumn('createur_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('story_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('projet_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('categorie_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('structure_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'offre',
              1 => 'demande',
             ),
             'default' => 'offre',
             ));
        $this->hasColumn('titre', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('ville', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('photo', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));


        $this->index('type', array(
             'fields' => 
             array(
              0 => 'type',
             ),
             ));
        $this->index('created_at', array(
             'fields' => 
             array(
              0 => 'created_at',
             ),
             ));
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Story', array(
             'local' => 'story_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Profil', array(
             'local' => 'createur_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Projet', array(
             'local' => 'projet_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Structure', array(
             'local' => 'structure_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('AnnonceCategorie', array(
             'local' => 'categorie_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Filiere', array(
             'refClass' => 'AnnonceFiliere',
             'local' => 'annonce_id',
             'foreign' => 'filiere_id'));

        $this->hasMany('Theme', array(
             'refClass' => 'AnnonceTheme',
             'local' => 'annonce_id',
             'foreign' => 'theme_id'));

        $this->hasMany('Competence', array(
             'refClass' => 'AnnonceCompetence',
             'local' => 'annonce_id',
             'foreign' => 'competence_id'));

        $this->hasMany('Metier', array(
             'refClass' => 'AnnonceMetier',
             'local' => 'annonce_id',
             'foreign' => 'metier_id'));

        $this->hasMany('AnnonceFiliere', array(
             'local' => 'id',
             'foreign' => 'annonce_id'));

        $this->hasMany('AnnonceTheme', array(
             'local' => 'id',
             'foreign' => 'annonce_id'));

        $this->hasMany('AnnonceCompetence', array(
             'local' => 'id',
             'foreign' => 'annonce_id'));

        $this->hasMany('AnnonceMetier', array(
             'local' => 'id',
             'foreign' => 'annonce_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'titre',
             ),
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
    }
}